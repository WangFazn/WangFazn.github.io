<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS 7 基础汇总</title>
      <link href="/centos-7-ji-chu-hui-zong/"/>
      <url>/centos-7-ji-chu-hui-zong/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MacOS下命令行神器：brew</title>
      <link href="/macos-xia-ming-ling-xing-shen-qi-brew/"/>
      <url>/macos-xia-ming-ling-xing-shen-qi-brew/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iterm2+oh-my-zsh:打造Mac上漂亮又好用的终端</title>
      <link href="/iterm2-oh-my-zsh-da-zao-mac-shang-piao-liang-you-hao-yong-de-zhong-duan/"/>
      <url>/iterm2-oh-my-zsh-da-zao-mac-shang-piao-liang-you-hao-yong-de-zhong-duan/</url>
      
        <content type="html"><![CDATA[<h2 id="iterm2-oh-my-zsh：打造Mac上漂亮又好用的终端"><a href="#iterm2-oh-my-zsh：打造Mac上漂亮又好用的终端" class="headerlink" title="iterm2+oh-my-zsh：打造Mac上漂亮又好用的终端"></a>iterm2+oh-my-zsh：打造Mac上漂亮又好用的终端</h2><p>配置后的效果，看着是不是很炫。</p><p><img src="../hexo/source/../../upload/Jietu.png" alt="配置效果"></p><p>下面进入正题</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="zsh介绍"><a href="#zsh介绍" class="headerlink" title="zsh介绍"></a>zsh介绍</h3><ul><li>zsh完全兼容bash</li><li>zsh具有强大的可定制的特点，支持许多插件，补全功能也很强大</li><li>明显缺点是配置麻烦</li></ul><p>zsh的一些命令：<br>查看当前使用的shell</p><p>MacOS默认安装zsh，确认你是否安装过zsh：</p><pre class=" language-ZSH"><code class="language-ZSH">zsh --version</code></pre><pre class=" language-ZSH"><code class="language-ZSH">echo $SHELL/bin/bash</code></pre><p>查看安装的 shell</p><pre class=" language-ZSH"><code class="language-ZSH">cat /etc/shells/bin/bash/bin/csh/bin/ksh/bin/sh/bin/tcsh/bin/zsh</code></pre><p>使用 brew 更新 zsh</p><pre class=" language-ZSH"><code class="language-ZSH">brew install zsh==> Downloading https://homebrew.bintray.com/bottles/zsh-5.5.1.high_sierra.bottle.tar.gz######################################################################## 100.0%==> Pouring zsh-5.5.1.high_sierra.bottle.tar.gz/usr/local/Cellar/zsh/5.5.1: 1,444 files, 12MB</code></pre><p>切换为 zsh</p><pre class=" language-ZSH"><code class="language-ZSH">chsh -s /bin/zsh</code></pre><p>重启终端即可使用 zsh。</p><p>所以，就有了神器oh-my-zsh来拯救广大的猿们。</p><h2 id="oh-my-zsh安装"><a href="#oh-my-zsh安装" class="headerlink" title="oh-my-zsh安装"></a>oh-my-zsh安装</h2><h3 id="oh-my-zsh介绍"><a href="#oh-my-zsh介绍" class="headerlink" title="oh-my-zsh介绍"></a>oh-my-zsh介绍</h3><ul><li>一款社区驱动的命令行工具，<strong>大神汇聚</strong></li><li>有许多精美的主题和强大的插件，可定制性强，<strong>美观方便</strong></li><li>有比bash更强大别名功能，<strong>实用高效</strong>。</li><li>github: <a href="https://github.com/ohmyzsh/ohmyzsh" target="_blank" rel="noopener">https://github.com/ohmyzsh/ohmyzsh</a></li></ul><h4 id="下载安装oh-my-zsh"><a href="#下载安装oh-my-zsh" class="headerlink" title="下载安装oh-my-zsh"></a>下载安装oh-my-zsh</h4><p><strong>方式一：</strong>使用git 这里下载到~/.oh-my-zsh下</p><pre class=" language-ZSH"><code class="language-ZSH">git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zs</code></pre><p><strong>方式二：</strong>使用curl</p><pre class=" language-ZSH"><code class="language-ZSH">sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"</code></pre><p><strong>方式三：</strong>使用wget</p><pre class=" language-ZSH"><code class="language-ZSH">sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"</code></pre><p>接下来备份配置文件，也可直接在usr目录中复制副本</p><pre class=" language-ZSH"><code class="language-ZSH">cp ~/.zshrc ~/.zshrc.orig</code></pre><p> 然后创建一个新的配置文件</p><pre class=" language-ZSH"><code class="language-ZSH"> cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</code></pre><p>切换默认shell为zsh</p><pre class=" language-ZSH"><code class="language-ZSH">chsh -s /bin/zsh</code></pre><p>最后完成效果，如下：</p><pre class=" language-ZSH"><code class="language-ZSH">sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"  ____  / /_     ____ ___  __  __   ____  _____/ /_   / __ \/ __ \   / __ `__ \/ / / /  /_  / / ___/ __ \ / /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / / \____/_/ /_/  /_/ /_/ /_/\__, /    /___/____/_/ /_/                          /____/                       ....is now installed!Please look over the ~/.zshrc file to select plugins, themes, and options.p.s. Follow us at https://twitter.com/ohmyzsh.p.p.s. Get stickers and t-shirts at http://shop.planetargon.com.</code></pre><p>Mac 下隐藏显示隐藏文件</p><blockquote><p>当升级到OS X &gt;=10.9 Mavericks</p></blockquote><blockquote><p>defaults write com.apple.finder AppleShowAllFiles Yes &amp;&amp; killall Finder //显示隐藏文件</p></blockquote><blockquote><p>defaults write com.apple.finder AppleShowAllFiles No &amp;&amp; killall Finder  //不显示隐藏文件</p></blockquote><blockquote><p>快捷键：在 macOS Sierra，可以使用快捷键⌘⇧.(Command + Shift + .) 来快速（在 Finder 中）显示和隐藏隐藏文件了。</p></blockquote><h2 id="iterm2下载安装"><a href="#iterm2下载安装" class="headerlink" title="iterm2下载安装"></a>iterm2下载安装</h2><p>方法一：官方网站下载直接安装</p><p>官方网站：<a href="https://www.iterm2.com/" target="_blank" rel="noopener">https://www.iterm2.com/</a></p><p>下载安装完成后，/bin目录下就会有一个<code>zsh</code>的文件夹，<code>zsh</code>就是一个新的终端，默认带<code>git</code>命令。现在设置<code>zsh</code>为默认终端：</p><pre class=" language-ZSH"><code class="language-ZSH">chsh -s /bin/zsh</code></pre><p>方法二：使用Homebrew安装</p><pre class=" language-ZSH"><code class="language-ZSH">brew cask install iterm2</code></pre><p>使用brew cask要先安装cask</p><pre class=" language-ZSH"><code class="language-ZSH">brew install caskroom/cask/brew-cask</code></pre><blockquote><p><strong>homebrew-cask与brew的区别</strong>：</p></blockquote><blockquote><p>brew是下载源码解压然后./configure &amp;&amp; make install, 并且会自动配置好环境变量。</p></blockquote><blockquote><p>brew cask主要用于有GUI的软件，下载已经编译好的应用包(.dmg/.pkg)。</p></blockquote><h3 id="更换iterm2的主题为Dracula"><a href="#更换iterm2的主题为Dracula" class="headerlink" title="更换iterm2的主题为Dracula"></a>更换iterm2的主题为Dracula</h3><p>1、下载iterm2的Dracula主题</p><pre class=" language-ZSH"><code class="language-ZSH">git clone https://github.com/dracula/iterm.git</code></pre><p>设置主题：</p><ol><li>iTerm2 &gt; Preferences &gt; Profiles &gt; Colors Tab</li><li>Open the Color Presets</li><li>从列表中选择import</li><li>选择刚才下载主题中Dracula.itermcolors 文件，确定</li><li>再次打开Color Presets… ，选择Dracula </li></ol><p><img src="https://img-blog.csdnimg.cn/2019042517164517.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhaXl1aGU=,size_16,color_FFFFFF,t_70" alt="设置参考"></p><h3 id="安装powerline字体"><a href="#安装powerline字体" class="headerlink" title="安装powerline字体"></a>安装powerline字体</h3><pre class=" language-ZSH"><code class="language-ZSH">git clone https://github.com/powerline/fonts.git --depth=1</code></pre><p>进入字体目录，安装所需字体：</p><pre class=" language-ZSH"><code class="language-ZSH">cd fonts./install.shcd ..rm -rf fonts</code></pre><p>或者，直接使用命令行安装</p><pre class=" language-ZSH"><code class="language-ZSH">pip install powerline-status --user</code></pre><p>打开iTerm2，按照路径打开：iTerm2 –&gt; Preferences –&gt; Profiles –&gt; text，找到Font处修改。</p><h3 id="安装PowerFonts"><a href="#安装PowerFonts" class="headerlink" title="安装PowerFonts"></a>安装PowerFonts</h3><p>安装字体库需要首先将项目 git clone 至本地，然后执行源码中的install.sh。</p><pre class=" language-ZSH"><code class="language-ZSH"># git clonegit clone https://github.com/powerline/fonts.git --depth=1# cd to foldercd fonts# run install shell./install.sh</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/2411388-114e36df4c2bb6f6.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="设置参考"></p><p>安装好字体库之后，设置iTerm2的字体，具体的操作：</p><p>iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Text，</p><p>在 Font 区域选中 Change Font，然后找到 Meslo LG 字体。有L、M、S可选，看个人喜好。</p><p><img src="https://upload-images.jianshu.io/upload_images/2411388-855b56e165e3dfd2.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="设置参考"></p><h3 id="修改配色方案"><a href="#修改配色方案" class="headerlink" title="修改配色方案"></a>修改配色方案</h3><p>最新的iterm 中默认安装了<code>Solarized Dark Higher Contrast</code>配色方案，所以打开iTerm2，按照路径打开：iTerm2 –&gt; Preferences –&gt; Profiles –&gt; color可做修改。</p><p><img src="https://upload-images.jianshu.io/upload_images/2411388-16fc7bd39d611b3a.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="设置参考"></p><h3 id="更换背景"><a href="#更换背景" class="headerlink" title="更换背景"></a>更换背景</h3><p>更换背景图片方式：iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Window -&gt; BackGround Image勾选图片即可。</p><p><img src="https://upload-images.jianshu.io/upload_images/2411388-5dfc4e3044f22baf.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="设置参考"></p><h2 id="oh-my-zsh主题配置"><a href="#oh-my-zsh主题配置" class="headerlink" title="oh-my-zsh主题配置"></a>oh-my-zsh主题配置</h2><h3 id="主题一：random"><a href="#主题一：random" class="headerlink" title="主题一：random"></a>主题一：random</h3><p>终端运行vim命令或在usr中直接打开<code>.zshrc</code>文件编辑</p><p><code>vim ~/.zshrc</code></p><pre class=" language-ZSH"><code class="language-ZSH"># Path to your oh-my-zsh installation.export ZSH="/Users/yourname/.oh-my-zsh"# to know which specific one was loaded, run: echo $RANDOM_THEME# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes# ZSH_THEME="robbyrussell"ZSH_THEME=random# Set list of themes to pick from when loading at random# Setting this variable when ZSH_THEME=random will cause</code></pre><p>配置项 ZSH_THEME 即为 oh-my-zsh 的主题配置。当设置为 ZSH_THEME=random 时，每次打开终端都会使用一种随机的主题。<br>更多主题见oh-my-zsh的<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes" target="_blank" rel="noopener">主题列表</a>。</p><p>最后，更新配置<code>source ~/.zshrc</code></p><h3 id="主题二：-powerlevel9k"><a href="#主题二：-powerlevel9k" class="headerlink" title="主题二：/powerlevel9k"></a>主题二：/powerlevel9k</h3><p>1、主题下载，并导入oh-my-zsh的themes文件夹中：</p><pre class=" language-ZSH"><code class="language-ZSH">git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k</code></pre><p>2、修改配置文件<code>~/.zshrc</code></p><pre class=" language-ZSH"><code class="language-ZSH">ZSH_THEME="powerlevel9k/powerlevel9k"</code></pre><p>3、更新配置文件</p><pre class=" language-ZSH"><code class="language-ZSH">source ~/.zshrc</code></pre><blockquote><p>轻度定制：默认的powerlevel9k主题最右侧显示的元素为：每条命令的执行状态，历史命令条数，当前时间，这样也比较冗余。我在这里将 历史命令条数 这一元素去掉，这样看起来比较简洁。这需要修改 ~/.zshrc 配置文件，在后面追加如下内容，定制该主题的显示元素。</p></blockquote><p>修改配置文件<code>~/.zshrc</code>：</p><pre class=" language-ZSH"><code class="language-ZSH">#设置 oh-my-zsh powerlevel9k 主题左边元素显示POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir rbenv vcs)#设置 oh-my-zsh powerlevel9k 主题右边元素显示POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs time)</code></pre><h3 id="主题三：Dracula"><a href="#主题三：Dracula" class="headerlink" title="主题三：Dracula"></a>主题三：Dracula</h3><p>1、下载主题文件</p><pre class=" language-ZSH"><code class="language-ZSH">$ git clone https://github.com/dracula/zsh.git</code></pre><p>2、创建一个指向Oh my zsh主题文件夹的符号链接</p><pre class=" language-ZSH"><code class="language-ZSH">DRACULA_THEME是你刚才下载主题的目录$ ln -s $DRACULA_THEME/dracula.zsh-theme ~/.oh-my-zsh/themes/dracula.zsh-theme</code></pre><p>3、修改zsh主题。编辑usr下<code>.zshrc</code>文件，修改ZSH_THEME为</p><pre class=" language-ZSH"><code class="language-ZSH">$ vim ~/.zshrcZSH_THEME="dracula"</code></pre><p>4、最后，更新配置文件</p><pre class=" language-zsh"><code class="language-zsh">source ~/.zshrc</code></pre><h3 id="主题四：powerline下载安装"><a href="#主题四：powerline下载安装" class="headerlink" title="主题四：powerline下载安装"></a>主题四：powerline下载安装</h3><p>powerline官网：<a href="https://powerline.readthedocs.io/en/latest/installation.html" target="_blank" rel="noopener">https://powerline.readthedocs.io/en/latest/installation.html</a><br>里面有详细的安装设置</p><p>1、下载主题 powerline-theme</p><pre class=" language-ZSH"><code class="language-ZSH">git clone git://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme </code></pre><p>下载完后安装主题，执行目录下的脚本install.sh，将主题 powerline.zsh-theme 放入 ~/.oh-my-zsh/themes/ 内</p><pre class=" language-ZSH"><code class="language-ZSH">sudo ./oh-my-zsh-powerline-theme/install.sh</code></pre><p>2、安装主题所需要的字体，否则会乱码</p><pre class=" language-ZSH"><code class="language-ZSH">git clone https://github.com/powerline/fonts.gitsudo ./fonts/install.sh</code></pre><p>3、找到“文本-&gt;&gt;字体-&gt;&gt;更改” ，”所有字体”中选中“ Meslo LG M for powerLine“ 字体</p><p>4、设置oh my zsh 配置文件</p><pre class=" language-ZSH"><code class="language-ZSH">vim  ~/.zshrc   //vim 编辑 zshrc 配置文件</code></pre><p>修改文件此处需要用到vim命令，此处不做演示<br>或者用一个自己熟悉的编辑器打开这个文件，可以找到这一项：ZSH_THEME</p><pre class=" language-ZSH"><code class="language-ZSH">ZSH_THEME="robbyrussel" plugins=(git autojump osx brew node npm) </code></pre><p>最后保存，重启终端命令行即可看到powerLine 主题。</p><h2 id="oh-my-zsh必备插件汇总"><a href="#oh-my-zsh必备插件汇总" class="headerlink" title="oh-my-zsh必备插件汇总"></a>oh-my-zsh必备插件汇总</h2><h3 id="插件一：incr自动补全插件"><a href="#插件一：incr自动补全插件" class="headerlink" title="插件一：incr自动补全插件"></a>插件一：incr自动补全插件</h3><p>下载 <a href="https://mimosa-pudica.net/src/incr-0.2.zsh" target="_blank" rel="noopener">incr</a> 自动补全插件，并将插件放在 oh-my-zsh 自定义插件目录中.</p><p>在 <code>/.oh-my-zsh/plugins</code> 中添加 <code>incr</code>文件夹，并拷入文件<code>incr-0.2.zsh</code>，然后在配置文件结束添加：</p><pre class=" language-ZSH"><code class="language-ZSH">source $ZSH/custom/plugins/incr/incr*.zsh</code></pre><p>最后，更新配置文件</p><pre class=" language-zsh"><code class="language-zsh">source ~/.zshrc</code></pre><p>实现效果，如官网所示：</p><p><img src="https://upload-images.jianshu.io/upload_images/6565026-9cf571a72835b013.gif?imageMogr2/auto-orient/strip|imageView2/2/w/404/format/webp" alt="官网效果"></p><h3 id="插件二：命令提示插件-zsh-autosuggestions"><a href="#插件二：命令提示插件-zsh-autosuggestions" class="headerlink" title="插件二：命令提示插件 zsh-autosuggestions"></a>插件二：命令提示插件 zsh-autosuggestions</h3><p>实现效果:输入g会出现相应提示，按↑即可补全</p><p><img src="https://img-blog.csdnimg.cn/20190425214634449.png" alt="效果参考"></p><p>步骤如下：</p><ol><li>下载命令提示插件</li><li>编辑配置文件，使用插件</li><li>添加配置文件</li></ol><pre class=" language-ZSH"><code class="language-ZSH">sudo git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestionsvim ~/.zshrcsource ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh</code></pre><h3 id="插件三：语法高亮显示"><a href="#插件三：语法高亮显示" class="headerlink" title="插件三：语法高亮显示"></a>插件三：语法高亮显示</h3><p><code>zsh-syntax-highlighting</code>插件可以使终端输入的命令有语法高亮效果，修改<code>～/zshrc</code>配置文件：</p><pre class=" language-ZSH"><code class="language-ZSH">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting</code></pre><p>在配置文件中查找设置plugins的行，并添加插件.</p><blockquote><p>注意：zsh-syntax-highlighting 必须放在最后面（官方推荐）*</p></blockquote><pre class=" language-ZSH"><code class="language-ZSH">plugins=(    git    ......    ........    zsh-syntax-highlighting)# 添加以下内容到文件末source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></pre><p><img src="https://img-blog.csdnimg.cn/2019031918165885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhaXl1aGU=,size_16,color_FFFFFF,t_70" alt="配置参考"></p><p>最后，更新配置文件</p><pre class=" language-zsh"><code class="language-zsh">source ~/.zshrc</code></pre><hr><p>本文参考网站如下，很是感谢：</p><ul><li><a href="https://www.jianshu.com/p/9c3439cc3bdb" target="_blank" rel="noopener">iTerm2 + Oh My Zsh 打造舒适终端体验</a></li><li><a href="https://blog.csdn.net/daiyuhe/article/details/88667875" target="_blank" rel="noopener">利用iTerm2+oh-my-zsh+Dracula主题打造我的Mac终端利器</a></li><li><a href="https://blog.csdn.net/zhangqianzhong/article/details/89221167" target="_blank" rel="noopener">打造Mac上漂亮又好用的终端-iterm2 + Oh my Zsh +主题和配色方案</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> iterm2 </tag>
            
            <tag> oh-my-zsh </tag>
            
            <tag> zsh </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown在线编辑器MdEditor</title>
      <link href="/markdown-zai-xian-bian-ji-qi-mdeditor/"/>
      <url>/markdown-zai-xian-bian-ji-qi-mdeditor/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown在线编辑器-MdEditor-介绍转载"><a href="#Markdown在线编辑器-MdEditor-介绍转载" class="headerlink" title="Markdown在线编辑器 MdEditor 介绍转载"></a>Markdown在线编辑器 MdEditor 介绍转载</h1><p><strong>Markdown是一种轻量级的「标记语言」</strong></p><p><img src="https://www.mdeditor.com/images/logos/markdown.png" alt="markdown" title="markdown"></p><blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md”</p></blockquote><h2 id="MdEditor是一个在线编辑Markdown文档的编辑器"><a href="#MdEditor是一个在线编辑Markdown文档的编辑器" class="headerlink" title="MdEditor是一个在线编辑Markdown文档的编辑器"></a>MdEditor是一个在线编辑Markdown文档的编辑器</h2><p><em>MdEditor扩展了Markdown的功能（如表格、脚注、内嵌HTML等等），以使让Markdown转换成更多的格式，和更丰富的展示效果，这些功能原初的Markdown尚不具备。</em></p><blockquote><p>Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如<del>Pandoc</del>，Pandao；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。</p></blockquote><p>MdEditor源于Pandao的JavaScript开源项目，开源地址<a href="https://github.com/pandao/editor.md" title="Editor.md" target="_blank" rel="noopener">Editor.md</a>，并在MIT开源协议的许可范围内进行了优化，以适应广大用户群体的需求。向优秀的markdown开源编辑器原作者Pandao致敬。</p><p><img src="https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png" alt="Pandao editor.md" title="Pandao editor.md"></p><h2 id="MdEditor的功能列表演示"><a href="#MdEditor的功能列表演示" class="headerlink" title="MdEditor的功能列表演示"></a>MdEditor的功能列表演示</h2><h3 id="标题样式"><a href="#标题样式" class="headerlink" title="标题样式"></a>标题样式</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 标题H1</span><span class="token title important"><span class="token punctuation">##</span> 标题H2</span><span class="token title important"><span class="token punctuation">###</span> 标题H3</span><span class="token title important"><span class="token punctuation">####</span> 标题H4</span><span class="token title important"><span class="token punctuation">#####</span> 标题H5</span><span class="token title important"><span class="token punctuation">######</span> 标题H5</span></code></pre><h1 id="标题H1"><a href="#标题H1" class="headerlink" title="标题H1"></a>标题H1</h1><h2 id="标题H2"><a href="#标题H2" class="headerlink" title="标题H2"></a>标题H2</h2><h3 id="标题H3"><a href="#标题H3" class="headerlink" title="标题H3"></a>标题H3</h3><h4 id="标题H4"><a href="#标题H4" class="headerlink" title="标题H4"></a>标题H4</h4><h5 id="标题H5"><a href="#标题H5" class="headerlink" title="标题H5"></a>标题H5</h5><h6 id="标题H5-1"><a href="#标题H5-1" class="headerlink" title="标题H5"></a>标题H5</h6><pre class=" language-Markdown"><code class="language-Markdown">h1 标题H1===h2 标题h2--- </code></pre><h1 id="h1-标题H1"><a href="#h1-标题H1" class="headerlink" title="h1 标题H1"></a>h1 标题H1</h1><h2 id="h2-标题h2"><a href="#h2-标题h2" class="headerlink" title="h2 标题h2"></a>h2 标题h2</h2><h3 id="字符效果和横线等"><a href="#字符效果和横线等" class="headerlink" title="字符效果和横线等"></a>字符效果和横线等</h3><hr><pre class=" language-Markdown"><code class="language-Markdown">~~删除线~~ <s>删除线（开启识别HTML标签时）</s></code></pre><p><del>删除线</del> <s>删除线（开启识别HTML标签时）</s></p><pre class=" language-Markdown"><code class="language-Markdown">*斜体字*      _斜体字_**粗体**  __粗体__***粗斜体*** ___粗斜体___上标：X<sub>2</sub>，下标：O<sup>2</sup></code></pre><p><em>斜体字</em>      <em>斜体字</em></p><p><strong>粗体</strong>  <strong>粗体</strong></p><p><strong><em>粗斜体</em></strong> <strong><em>粗斜体</em></strong></p><p>上标：X<sub>2</sub>，下标：O<sup>2</sup></p><p><strong>缩写(同HTML的abbr标签)</strong></p><blockquote><p>即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启</p><pre class=" language-markdown"><code class="language-markdown">The <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>abbr</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hyper Text Markup Language<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>abbr</span><span class="token punctuation">></span></span> specification is maintained by the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>abbr</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>World Wide Web Consortium<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>W3C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>abbr</span><span class="token punctuation">></span></span>.</code></pre><p>The <abbr title="Hyper Text Markup Language">HTML</abbr> specification is maintained by the <abbr title="World Wide Web Consortium">W3C</abbr>.</p></blockquote><h3 id="引用-Blockquotes"><a href="#引用-Blockquotes" class="headerlink" title="引用 Blockquotes"></a>引用 Blockquotes</h3><p><code>&gt; 引用文本 Blockquotes</code></p><blockquote><p>引用文本 Blockquotes</p></blockquote><p>引用的行内混合 Blockquotes</p><blockquote><p>引用：如果想要插入空白换行<code>即&lt;br /&gt;标签</code>，在插入处先键入两个以上的空格然后回车即可，<a href="https://www.mdeditor.com/" target="_blank" rel="noopener">普通链接</a>。</p></blockquote><h3 id="锚点与链接-Links"><a href="#锚点与链接-Links" class="headerlink" title="锚点与链接 Links"></a>锚点与链接 Links</h3><p><a href="https://www.mdeditor.com/" target="_blank" rel="noopener">普通链接</a><br><a href="https://www.mdeditor.com/" title="普通链接带标题" target="_blank" rel="noopener">普通链接带标题</a><br>直接链接：<a href="https://www.mdeditor.com" target="_blank" rel="noopener">https://www.mdeditor.com</a><br>[锚点链接][anchor-id]<br>[anchor-id]: <a href="https://www.mdeditor.com/" target="_blank" rel="noopener">https://www.mdeditor.com/</a><br><a href="mailto:test.test@gmail.com" target="_blank" rel="noopener">mailto:test.test@gmail.com</a><br>GFM a-tail link @pandao<br>邮箱地址自动链接 <a href="mailto:test.test@gmail.com" target="_blank" rel="noopener">test.test@gmail.com</a>  <a href="mailto:www@vip.qq.com" target="_blank" rel="noopener">www@vip.qq.com</a></p><blockquote><p>@pandao</p></blockquote><h3 id="多语言代码高亮-Codes"><a href="#多语言代码高亮-Codes" class="headerlink" title="多语言代码高亮 Codes"></a>多语言代码高亮 Codes</h3><h4 id="行内代码-Inline-code"><a href="#行内代码-Inline-code" class="headerlink" title="行内代码 Inline code"></a>行内代码 Inline code</h4><p>执行命令：<code>npm install marked</code></p><h4 id="缩进风格"><a href="#缩进风格" class="headerlink" title="缩进风格"></a>缩进风格</h4><p>即缩进四个空格，也做为实现类似 <code>&lt;pre&gt;</code> 预格式化文本 ( Preformatted Text ) 的功能。</p><pre><code>&lt;?php    echo &quot;Hello world!&quot;;?&gt;</code></pre><p>预格式化文本：</p><pre><code>| First Header  | Second Header || ------------- | ------------- || Content Cell  | Content Cell  || Content Cell  | Content Cell  |</code></pre><h4 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码"></a>JS代码</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Hello world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="HTML-代码-HTML-codes"><a href="#HTML-代码-HTML-codes" class="headerlink" title="HTML 代码 HTML codes"></a>HTML 代码 HTML codes</h4><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mate</span> <span class="token attr-name">charest</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Editor.md, Markdown, Editor<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hello world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">            <span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">14</span>px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#444</span><span class="token punctuation">;</span><span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Microsoft Yahei"</span>, Tahoma, <span class="token string">"Hiragino Sans GB"</span>, Arial<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span>            <span class="token selector">ul</span><span class="token punctuation">{</span><span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span>            <span class="token selector">img</span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span><span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-xxl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Plain text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="图片-Images"><a href="#图片-Images" class="headerlink" title="图片 Images"></a>图片 Images</h3><p>图片加链接 (Image + Link)：</p><p><a href="https://www.mdeditor.com/images/logos/markdown.png" title="markdown" target="_blank" rel="noopener"><img src="https://www.mdeditor.com/images/logos/markdown.png" alt=""></a></p><blockquote><p>Follow your heart.</p></blockquote><hr><h3 id="列表-Lists"><a href="#列表-Lists" class="headerlink" title="列表 Lists"></a>列表 Lists</h3><h4 id="无序列表（减号）Unordered-Lists"><a href="#无序列表（减号）Unordered-Lists" class="headerlink" title="无序列表（减号）Unordered Lists (-)"></a>无序列表（减号）Unordered Lists (-)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（星号）Unordered-Lists"><a href="#无序列表（星号）Unordered-Lists" class="headerlink" title="无序列表（星号）Unordered Lists (*)"></a>无序列表（星号）Unordered Lists (*)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（加号和嵌套）Unordered-Lists"><a href="#无序列表（加号和嵌套）Unordered-Lists" class="headerlink" title="无序列表（加号和嵌套）Unordered Lists (+)"></a>无序列表（加号和嵌套）Unordered Lists (+)</h4><ul><li>列表一</li><li>列表二<ul><li>列表二-1</li><li>列表二-2</li><li>列表二-3</li></ul></li><li>列表三<ul><li>列表一</li><li>列表二</li><li>列表三</li></ul></li></ul><h4 id="有序列表-Ordered-Lists"><a href="#有序列表-Ordered-Lists" class="headerlink" title="有序列表 Ordered Lists (-)"></a>有序列表 Ordered Lists (-)</h4><ol><li>第一行</li><li>第二行</li><li>第三行</li></ol><h4 id="GFM-task-list"><a href="#GFM-task-list" class="headerlink" title="GFM task list"></a>GFM task list</h4><pre><code>- [x] GFM task list 1- [x] GFM task list 2- [ ] GFM task list 3    - [ ] GFM task list 3-1    - [ ] GFM task list 3-2    - [ ] GFM task list 3-3- [ ] GFM task list 4    - [ ] GFM task list 4-1    - [ ] GFM task list 4-2</code></pre><ul><li style="list-style: none"><input type="checkbox" checked> GFM task list 1</li><li style="list-style: none"><input type="checkbox" checked> GFM task list 2</li><li style="list-style: none"><input type="checkbox"> GFM task list 3<ul><li style="list-style: none"><input type="checkbox"> GFM task list 3-1</li><li style="list-style: none"><input type="checkbox"> GFM task list 3-2</li><li style="list-style: none"><input type="checkbox"> GFM task list 3-3</li></ul></li><li style="list-style: none"><input type="checkbox"> GFM task list 4<ul><li style="list-style: none"><input type="checkbox"> GFM task list 4-1</li><li style="list-style: none"><input type="checkbox"> GFM task list 4-2</li></ul></li></ul><hr><h3 id="绘制表格-Tables"><a href="#绘制表格-Tables" class="headerlink" title="绘制表格 Tables"></a>绘制表格 Tables</h3><pre><code>| 项目        | 价格   |  数量  || --------   | -----:  | :----:  || 计算机      | $1600   |   5     || 手机        |   $12   |   12   || 管线        |    $1    |  234  |</code></pre><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">$1</td><td style="text-align:center">234</td></tr></tbody></table><pre class=" language-markdown"><code class="language-markdown"><span class="token title important">First Header  | Second Header<span class="token punctuation">-------------</span></span> | -------------Content Cell  | Content CellContent Cell  | Content Cell</code></pre><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><pre class=" language-Markdown"><code class="language-Markdown">| First Header  | Second Header || ------------- | ------------- || Content Cell  | Content Cell  || Content Cell  | Content Cell  |</code></pre><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><pre class=" language-markdown"><code class="language-markdown">| Function name | Description                    || ------------- | ------------------------------ || <span class="token code keyword">`help()`</span>      | Display the help window.       || <span class="token code keyword">`destroy()`</span>   | <span class="token bold"><span class="token punctuation">**</span>Destroy your computer!<span class="token punctuation">**</span></span>     |</code></pre><table><thead><tr><th>Function name</th><th>Description</th></tr></thead><tbody><tr><td><code>help()</code></td><td>Display the help window.</td></tr><tr><td><code>destroy()</code></td><td><strong>Destroy your computer!</strong></td></tr></tbody></table><pre class=" language-markdown"><code class="language-markdown">| Left-Aligned  | Center Aligned  | Right Aligned || :------------ |:---------------:| -----:|| col 3 is      | some wordy text | $1600 || col 2 is      | centered        |   $12 || zebra stripes | are neat        |    $1 |</code></pre><table><thead><tr><th style="text-align:left">Left-Aligned</th><th style="text-align:center">Center Aligned</th><th style="text-align:right">Right Aligned</th></tr></thead><tbody><tr><td style="text-align:left">col 3 is</td><td style="text-align:center">some wordy text</td><td style="text-align:right">$1600</td></tr><tr><td style="text-align:left">col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td style="text-align:left">zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><pre class=" language-markdown"><code class="language-markdown">| Item      | Value || --------- | -----:|| Computer  | $1600 || Phone     |   $12 || Pipe      |    $1 |</code></pre><table><thead><tr><th>Item</th><th style="text-align:right">Value</th></tr></thead><tbody><tr><td>Computer</td><td style="text-align:right">$1600</td></tr><tr><td>Phone</td><td style="text-align:right">$12</td></tr><tr><td>Pipe</td><td style="text-align:right">$1</td></tr></tbody></table><hr><h4 id="特殊符号-HTML-Entities-Codes"><a href="#特殊符号-HTML-Entities-Codes" class="headerlink" title="特殊符号 HTML Entities Codes"></a>特殊符号 HTML Entities Codes</h4><pre class=" language-markdown"><code class="language-markdown"><span class="token entity" title="&copy;">&amp;copy;</span> &amp;  <span class="token entity" title="&uml;">&amp;uml;</span> <span class="token entity" title="&trade;">&amp;trade;</span> <span class="token entity" title="&iexcl;">&amp;iexcl;</span> <span class="token entity" title="&pound;">&amp;pound;</span><span class="token entity" title="&amp;">&amp;amp;</span> <span class="token entity" title="&lt;">&amp;lt;</span> <span class="token entity" title="&gt;">&amp;gt;</span> <span class="token entity" title="&yen;">&amp;yen;</span> <span class="token entity" title="&euro;">&amp;euro;</span> <span class="token entity" title="&reg;">&amp;reg;</span> <span class="token entity" title="&plusmn;">&amp;plusmn;</span> <span class="token entity" title="&para;">&amp;para;</span> <span class="token entity" title="&sect;">&amp;sect;</span> <span class="token entity" title="&brvbar;">&amp;brvbar;</span> <span class="token entity" title="&macr;">&amp;macr;</span> <span class="token entity" title="&laquo;">&amp;laquo;</span> <span class="token entity" title="&middot;">&amp;middot;</span>X<span class="token entity" title="&sup2;">&amp;sup2;</span> Y<span class="token entity" title="&sup3;">&amp;sup3;</span> <span class="token entity" title="&frac34;">&amp;frac34;</span> <span class="token entity" title="&frac14;">&amp;frac14;</span>  <span class="token entity" title="&times;">&amp;times;</span>  <span class="token entity" title="&divide;">&amp;divide;</span>   <span class="token entity" title="&raquo;">&amp;raquo;</span>18<span class="token entity" title="&ordm;">&amp;ordm;</span>C  <span class="token entity" title="&quot;">&amp;quot;</span>  <span class="token entity" title="&apos;">&amp;apos;</span></code></pre><p>&copy; &amp;  &uml; &trade; &iexcl; &pound;</p><p>&amp; &lt; &gt; &yen; &euro; &reg; </p><p>&plusmn; &para; &sect; &brvbar; </p><p>&macr; &laquo; &middot;</p><p>X&sup2; Y&sup3; &frac34; </p><p>&frac14;  &times;  &divide;   &raquo;</p><p>18&ordm;C  &quot;  &apos;</p><p>[========]</p><h3 id="Emoji表情-smiley"><a href="#Emoji表情-smiley" class="headerlink" title="Emoji表情 :smiley:"></a>Emoji表情 :smiley:</h3><blockquote><p>Blockquotes :star:</p></blockquote><h4 id="GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x"><a href="#GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x" class="headerlink" title="GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:"></a>GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:</h4><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">-</span> [x] :smiley: @mentions, :smiley: #refs, [links](), <span class="token bold"><span class="token punctuation">**</span>formatting<span class="token punctuation">**</span></span>, and <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>tags<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span> supported :editormd-logo:;<span class="token list punctuation">-</span> [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;<span class="token list punctuation">-</span> <span class="token url">[x] [<span class="token variable"> </span>]</span> :smiley: this is a complete item :smiley:;<span class="token list punctuation">-</span> <span class="token url">[ ] []</span>this is an incomplete item <span class="token url">[test link](#)</span> :fa-star: @pandao;<span class="token list punctuation">-</span> <span class="token url">[ ] [<span class="token variable"> </span>]</span>this is an incomplete item :fa-star: :fa-gear:;<span class="token code keyword">    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;</span><span class="token code keyword">    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);</span></code></pre><ul><li style="list-style: none"><input type="checkbox" checked> :smiley: @mentions, :smiley: #refs, <a href="">links</a>, <strong>formatting</strong>, and <del>tags</del> supported :editormd-logo:;</li><li style="list-style: none"><input type="checkbox" checked> list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;</li><li style="list-style: none"><input type="checkbox" checked> [ ] :smiley: this is a complete item :smiley:;</li><li style="list-style: none"><input type="checkbox"> []this is an incomplete item <a href="#">test link</a> :fa-star: @pandao;</li><li style="list-style: none"><input type="checkbox"> [ ]this is an incomplete item :fa-star: :fa-gear:;<ul><li style="list-style: none"><input type="checkbox"> :smiley: this is an incomplete item <a href="#">test link</a> :fa-star: :fa-gear:;</li><li style="list-style: none"><input type="checkbox"> :smiley: this is  :fa-star: :fa-gear: an incomplete item <a href="#">test link</a>;</li></ul></li></ul><h4 id="反斜杠-Escape"><a href="#反斜杠-Escape" class="headerlink" title="反斜杠 Escape"></a>反斜杠 Escape</h4><p>*literal asterisks*</p><p>[========]</p><h3 id="科学公式-TeX-KaTeX"><a href="#科学公式-TeX-KaTeX" class="headerlink" title="科学公式 TeX(KaTeX)"></a>科学公式 TeX(KaTeX)</h3><p><code>$$E=mc^2$$</code><br>$$E=mc^2$$</p><p>行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。</p><pre class=" language-math"><code class="language-math">$$x > y$$$$\(\sqrt{3x-1}+(1+x)^2\)$$$$\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))$$</code></pre><p>$$x &gt; y$$</p><p>$$(\sqrt{3x-1}+(1+x)^2)$$</p><p>$$\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))$$</p><p>多行公式：</p><pre class=" language-math"><code class="language-math">\displaystyle\left( \sum\_{k=1}^n a\_k b\_k \right)^2\leq\left( \sum\_{k=1}^n a\_k^2 \right)\left( \sum\_{k=1}^n b\_k^2 \right)</code></pre><pre class=" language-katex"><code class="language-katex">\displaystyle    \frac{1}{        \Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{        \frac25 \pi}} = 1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {        1+\frac{e^{-6\pi}}        {1+\frac{e^{-8\pi}}         {1+\cdots} }        }    }</code></pre><pre class=" language-latex"><code class="language-latex">f(x) = <span class="token function selector">\int</span>_<span class="token punctuation">{</span>-<span class="token function selector">\infty</span><span class="token punctuation">}</span>^<span class="token function selector">\infty</span>    <span class="token function selector">\hat</span> f(<span class="token function selector">\xi</span>)<span class="token function selector">\,</span>e^<span class="token punctuation">{</span>2 <span class="token function selector">\pi</span> i <span class="token function selector">\xi</span> x<span class="token punctuation">}</span>    <span class="token function selector">\,</span>d<span class="token function selector">\xi</span></code></pre><h3 id="分页符-Page-break"><a href="#分页符-Page-break" class="headerlink" title="分页符 Page break"></a>分页符 Page break</h3><blockquote><p>Print Test: Ctrl + P</p></blockquote><p>[========]</p><h3 id="绘制流程图-Flowchart"><a href="#绘制流程图-Flowchart" class="headerlink" title="绘制流程图 Flowchart"></a>绘制流程图 Flowchart</h3><pre class=" language-flow"><code class="language-flow">st=>start: 用户登陆op=>operation: 登陆操作cond=>condition: 登陆成功 Yes or No?e=>end: 进入后台st->op->condcond(yes)->econd(no)->op</code></pre><p>[========]</p><h3 id="绘制序列图-Sequence-Diagram"><a href="#绘制序列图-Sequence-Diagram" class="headerlink" title="绘制序列图 Sequence Diagram"></a>绘制序列图 Sequence Diagram</h3><pre class=" language-seq"><code class="language-seq">Andrew->China: Says HelloNote right of China: China thinks\nabout itChina-->Andrew: How are you?Andrew->>China: I am good thanks!</code></pre><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> MdEditor </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown学习资源汇总</title>
      <link href="/markdown-xue-xi-zi-yuan-hui-zong/"/>
      <url>/markdown-xue-xi-zi-yuan-hui-zong/</url>
      
        <content type="html"><![CDATA[<p><img src="https://via.placeholder.com/600x90/?text=Markdown+Resources" alt=""></p><h3 id="Markdown语法相关网站"><a href="#Markdown语法相关网站" class="headerlink" title="Markdown语法相关网站"></a>Markdown语法相关网站</h3><ul><li><a href="https://markdown-zh.readthedocs.io/en/latest/" target="_blank" rel="noopener">Markdown中文文档</a></li><li><a href="http://www.markdown.cn/" target="_blank" rel="noopener">Markdown教程</a> </li><li><a href="https://www.jianshu.com/p/1e402922ee32" target="_blank" rel="noopener">Markdown入门指南</a></li><li><a href="https://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">DARING FIREBALL</a></li></ul><h3 id="Markdown工具"><a href="#Markdown工具" class="headerlink" title="Markdown工具"></a>Markdown工具</h3><h4 id="–-window平台"><a href="#–-window平台" class="headerlink" title="– window平台"></a>– window平台</h4><ul><li><a href="http://markdownpad.com" target="_blank" rel="noopener">Markdownpad</a> </li><li><a href="http://code52.org/DownmarkerWPF" target="_blank" rel="noopener">MarkPad</a> </li></ul><h4 id="–-Linux平台"><a href="#–-Linux平台" class="headerlink" title="– Linux平台"></a>– Linux平台</h4><ul><li>ReText</li></ul><h4 id="–-Mac"><a href="#–-Mac" class="headerlink" title="– Mac"></a>– Mac</h4><ul><li><a href="http://25.io/mou/" target="_blank" rel="noopener">Mou</a></li><li>Ulysses</li><li>Byword</li><li>iA Writer Pro</li></ul><h4 id="–-iOS"><a href="#–-iOS" class="headerlink" title="– iOS"></a>– iOS</h4><ul><li>Drafts</li><li>Day One</li><li>iA Writer</li></ul><h4 id="–-WEB端在线编辑器"><a href="#–-WEB端在线编辑器" class="headerlink" title="– WEB端在线编辑器"></a>– WEB端在线编辑器</h4><ul><li><a href="https://www.mdeditor.com/" target="_blank" rel="noopener">Markdown在线编辑</a></li><li><a href="https://www.jianshu.com/writer#/notebooks/22144422/notes/58736003" target="_blank" rel="noopener">简书</a></li><li>Markable.in</li><li>Dillinger.io<h4 id="–-浏览器插件"><a href="#–-浏览器插件" class="headerlink" title="– 浏览器插件"></a>– 浏览器插件</h4></li><li>MaDe(Chrome)</li></ul><h4 id="–-android"><a href="#–-android" class="headerlink" title="– android"></a>– android</h4><ul><li><h4 id="–-高级应用-Sublime-Text-2-MarkdownEditing-教程"><a href="#–-高级应用-Sublime-Text-2-MarkdownEditing-教程" class="headerlink" title="– 高级应用(Sublime Text 2 + MarkdownEditing 教程)"></a>– 高级应用(Sublime Text 2 + MarkdownEditing 教程)</h4></li><li><a href="http://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text 2</a></li><li><a href="http://ttscoff.github.io/MarkdownEditing/" target="_blank" rel="noopener">MarkdownEditing—Better Markdown editing for Sublime Text 2</a></li><li><a href="https://lucifr.com/markdownediting-for-sublime-text-2/" target="_blank" rel="noopener">MarkdownEditing教程—Sublime Text 2 的 Markdown 利器</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 学习资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客图片素材：图片占位符</title>
      <link href="/bo-ke-tu-pian-su-cai-tu-pian-zhan-wei-fu/"/>
      <url>/bo-ke-tu-pian-su-cai-tu-pian-zhan-wei-fu/</url>
      
        <content type="html"><![CDATA[<h3 id="图片点位符"><a href="#图片点位符" class="headerlink" title="图片点位符"></a>图片点位符</h3><p><a href="https://placeholder.com" target="_blank" rel="noopener">placeholder.com</a></p><p><a href="http://placehold.jp/en.htm" target="_blank" rel="noopener">Placehold.jp</a></p><p><a href="https://picsum.photos/" target="_blank" rel="noopener">Lorem Picsum</a></p><blockquote><p>Lorem Picsum 可以说是图片版的乱数假文，这个名字就已经很直白了。<br>主要特点：这款工具包含了大量高素质的图片，多种显示模式，并且是完全免费的。满足绝大多数设计师对于占位符的需求。<br>工作原理：基于你的设计需求，创建规范，你所需要做的就是将代码插入到网页对应的位置即可。代码片段将会使得页面加载的时候直接从工具的数据库当中调取图片，而其中的图片素材绝大多数都来自顶级免费图片库 Unsplash，无需安装和下载。</p></blockquote><p><img src="https://picsum.photos/200/300" alt="placeholder"></p><p><img src="https://picsum.photos/id/237/200/300" alt="placeholder"></p><p><a href="https://imgplaceholder.com/" target="_blank" rel="noopener">ImgPlaceholder</a></p><p><a href="http://placekitten.com/" target="_blank" rel="noopener">Place Kitten</a></p><h3 id="免费图库"><a href="#免费图库" class="headerlink" title="免费图库"></a>免费图库</h3><p><a href="https://www.pickpik.com/" target="_blank" rel="noopener">pickpik</a></p><p><a href="https://www.metmuseum.org/art/collection/" target="_blank" rel="noopener">美国大都会博物馆(The Metropolitan Museum of Art)</a></p><p><a href="https://digitalcollections.nypl.org/" target="_blank" rel="noopener">纽约公共图书馆（New York Public Library, NYPL）</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习素材 </tag>
            
            <tag> 图片点位符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法简介</title>
      <link href="/markdown-yu-fa-jian-jie/"/>
      <url>/markdown-yu-fa-jian-jie/</url>
      
        <content type="html"><![CDATA[<p><strong>Markdown是一种轻量级的「标记语言」</strong></p><blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md”</p></blockquote><h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><ul><li>Markdown 的目标是实现「易读易写」。<h3 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h3></li><li>Markdown 语法的目标是：成为一种适用于网络的书写语言。</li><li>Markdown 的理念是，能让文档更容易读、写和随意改。</li><li>HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，</li><li>Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</li><li>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</li></ul><p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p><table><br>    <tr><br>        <td>Foo</td><br>        <td>Doo</td><br>    </tr><br>    <tr><br>        <td>Foo</td><br>        <td>Coo</td><br>    </tr><br>    <tr><br>        <td>Foo</td><br>        <td>Voo</td><br>    </tr><br></table><pre class=" language-HTML"><code class="language-HTML">这是一个普通段落。<table>    <tr>        <td>Foo</td>        <td>Doo</td>    </tr>    <tr>        <td>Foo</td>        <td>Coo</td>    </tr>    <tr>        <td>Foo</td>        <td>Voo</td>    </tr></table>这是另一个普通段落。</code></pre><p><em>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<strong>强调</strong>会没有效果。</em></p><h3 id="特殊字符自动转换"><a href="#特殊字符自动转换" class="headerlink" title="特殊字符自动转换"></a>特殊字符自动转换</h3><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 &amp; 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 &amp;。</p><p>版权符号©，你可以这样写：<code>&amp;copy;</code>Markdown 会保留它不动。而若你写：AT&amp;T ,Markdown 就会将它转为：<code>AT&amp;amp;T</code></p><h2 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p><p>类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如：</p><h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token title important">This is an H1<span class="token punctuation">=============</span></span><span class="token title important">This is an H2<span class="token punctuation">-------------</span></span></code></pre><p><strong>任何数量的 = 和 - 都可以有效果。</strong></p><p>类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：</p><h1 id="这是-H1"><a href="#这是-H1" class="headerlink" title="这是 H1"></a>这是 H1</h1><h2 id="这是-H2"><a href="#这是-H2" class="headerlink" title="这是 H2"></a>这是 H2</h2><h3 id="这是-H3"><a href="#这是-H3" class="headerlink" title="这是 H3"></a>这是 H3</h3><h4 id="这是-H4"><a href="#这是-H4" class="headerlink" title="这是 H4"></a>这是 H4</h4><h5 id="这是-H5"><a href="#这是-H5" class="headerlink" title="这是 H5"></a>这是 H5</h5><h6 id="这是-H6"><a href="#这是-H6" class="headerlink" title="这是 H6"></a>这是 H6</h6><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 这是 H1</span><span class="token title important"><span class="token punctuation">##</span> 这是 H2</span><span class="token title important"><span class="token punctuation">###</span> 这是 H3</span><span class="token title important"><span class="token punctuation">####</span> 这是 H4</span><span class="token title important"><span class="token punctuation">#####</span> 这是 H5</span><span class="token title important"><span class="token punctuation">######</span> 这是 H6</span></code></pre><h3 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h3><p>Markdown 标记区块引用是使用类似 email 中用 &gt; 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &gt; ：</p><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<span class="token blockquote punctuation">></span> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</code></pre><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</p><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</p></blockquote><blockquote><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.<br><code>`</code>markdown<br>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</p></blockquote><blockquote><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.<br><code>`</code><br>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p></blockquote><p> This is the first level of quoting.</p><blockquote><blockquote><p>This is nested blockquote.</p></blockquote><p>Back to the first level.</p></blockquote><pre class=" language-markdown"><code class="language-markdown"> This is the first level of quoting.<span class="token blockquote punctuation">></span><span class="token blockquote punctuation">> ></span> This is nested blockquote.<span class="token blockquote punctuation">></span><span class="token blockquote punctuation">></span> Back to the first level.</code></pre><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><blockquote><h2 id="这是一个标题。"><a href="#这是一个标题。" class="headerlink" title="这是一个标题。"></a>这是一个标题。</h2><ol><li>这是第一行列表项。</li><li>这是第二行列表项。</li></ol><p>给出一些例子代码：</p><pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">##</span> 这是一个标题。</span><span class="token list punctuation">1.</span>   这是第一行列表项。<span class="token list punctuation">2.</span>   这是第二行列表项。给出一些例子代码：<span class="token code keyword">    return shell_exec("echo $input | $markdown_script");</span></code></pre><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择增加引用阶层。</p></blockquote><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown 支持有序列表和无序列表。</p><p><strong>无序列表使用星号、加号或是减号作为列表标记：</strong></p><ul><li>Red</li><li>Green</li><li>Blue</li></ul><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> Red<span class="token list punctuation">*</span> Green<span class="token list punctuation">*</span> Blue等同于：<span class="token list punctuation">+</span> Red<span class="token list punctuation">+</span> Green<span class="token list punctuation">+</span> Blue也等同于：<span class="token list punctuation">-</span> Red<span class="token list punctuation">-</span> Green<span class="token list punctuation">-</span> Blue</code></pre><p>有序列表则使用数字接着一个英文句点：</p><ol><li>Bird</li><li>McHale</li><li>Parish<br><code>`</code>markdown</li><li>Bird</li><li>McHale</li><li>Parish<br><code>`</code><br>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：<ol><br><li>Bird</li><br><li>McHale</li><br><li>Parish</li><br></ol></li></ol><pre class=" language-HTML"><code class="language-HTML"><ol><li>Bird</li><li>McHale</li><li>Parish</li></ol></code></pre><p>如果你的列表标记写成：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> Bird<span class="token list punctuation">1.</span> McHale<span class="token list punctuation">1.</span> Parish或甚至是：<span class="token list punctuation">3.</span> Bird<span class="token list punctuation">1.</span> McHale<span class="token list punctuation">8.</span> Parish</code></pre><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><p>Here is an example of AppleScript:</p><pre><code>tell application &quot;Foo&quot;    beepend tell</code></pre><pre class=" language-markdown"><code class="language-markdown">Here is an example of AppleScript:<span class="token code keyword">    tell application "Foo"</span><span class="token code keyword">        beep</span><span class="token code keyword">    end tell</span></code></pre><p>会被转换为：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Here is an example of AppleScript:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>tell application "Foo"<span class="token code keyword">    beep</span>end tell<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span></code></pre><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， &amp; 、 &lt; 和 &gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><div class="footer"><br>  &copy; 2004 Foo Corporation<br></div><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token entity" title="&copy;">&amp;copy;</span> 2004 Foo Corporation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>会被转换为：</p><pre class=" language-HTML"><code class="language-HTML"><pre><code>&lt;div class="footer"&gt;    &amp;copy; 2004 Foo Corporation&lt;/div&gt;</code></pre></code></pre><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><hr><hr><hr><hr><hr><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">* * *</span><span class="token hr punctuation">***</span><span class="token hr punctuation">*****</span><span class="token hr punctuation">- - -</span><span class="token hr punctuation">---------------------------------------</span></code></pre><h2 id="区段元素-内联元素"><a href="#区段元素-内联元素" class="headerlink" title="区段元素 (内联元素)"></a>区段元素 (内联元素)</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种形式的链接语法： <strong>行内式</strong>和<strong>参考式</strong>两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><h4 id="行内式的链接"><a href="#行内式的链接" class="headerlink" title="行内式的链接:"></a>行内式的链接:</h4><p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><p>This is <a href="http://example.com/" title="Title" target="_blank" rel="noopener">an example</a> inline link.<br><a href="http://example.net/" target="_blank" rel="noopener">This link</a> has no title attribute.</p><pre class=" language-markdown"><code class="language-markdown">This is <span class="token url">[an example](http://example.com/ <span class="token string">"Title"</span>)</span> inline link.<span class="token url">[This link](http://example.net/)</span> has no title attribute.</code></pre><p>会产生：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://example.com/<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>an example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> inline link.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://example.net/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> has notitle attribute.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>如果你是要链接到同样主机的资源，你可以使用相对路径：<br>See my <a href="/about/">About</a> page for details.</p><pre class=" language-markdown"><code class="language-markdown">See my <span class="token url">[About](/about/)</span> page for details.</code></pre><h4 id="参考式的链接"><a href="#参考式的链接" class="headerlink" title="参考式的链接:"></a>参考式的链接:</h4><p>参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><p>This is <a href="http://example.com/" title="Optional Title Here" target="_blank" rel="noopener">an example</a> reference-style link.</p><pre class=" language-markdown"><code class="language-markdown">This is <span class="token url">[an example][<span class="token variable">id</span>]</span>reference-style link.你也可以选择性地在两个方括号中间加上一个空格：This is <span class="token url">[an example] [<span class="token variable">id</span>]</span> reference-style link.接着，在文件的任意处，你可以把这个标记的链接内容定义出来：<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">id</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://example.com/  <span class="token string">"Optional Title Here"</span></span></code></pre><p>下面是一个参考式链接的范例：</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p><pre class=" language-markdown"><code class="language-markdown">I get 10 times more traffic from <span class="token url">[Google] [<span class="token variable">1</span>]</span> than from<span class="token url">[Yahoo] [<span class="token variable">2</span>]</span> or <span class="token url">[MSN] [<span class="token variable">3</span>]</span>.  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://google.com/        <span class="token string">"Google"</span></span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://search.yahoo.com/  <span class="token string">"Yahoo Search"</span></span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://search.msn.com/    <span class="token string">"MSN Search"</span></span></code></pre><p>如果改成用链接名称的方式写：</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p><pre class=" language-markdown"><code class="language-markdown">I get 10 times more traffic from <span class="token url">[Google][]</span> than from<span class="token url">[Yahoo][]</span> or <span class="token url">[MSN][]</span>.  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">google</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://google.com/        <span class="token string">"Google"</span></span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">yahoo</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  http://search.yahoo.com/  <span class="token string">"Yahoo Search"</span></span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">msn</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    http://search.msn.com/    <span class="token string">"MSN Search"</span></span></code></pre><p>上面两种写法都会产生下面的 HTML。</p><pre class=" language-HTML"><code class="language-HTML"><p>I get 10 times more traffic from <a href="http://google.com/"title="Google">Google</a> than from<a href="http://search.yahoo.com/" title="Yahoo Search">Yahoo</a>or <a href="http://search.msn.com/" title="MSN Search">MSN</a>.</p></code></pre><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a><br>than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or<br><a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p><pre class=" language-markdown"><code class="language-markdown">I get 10 times more traffic from <span class="token url">[Google](http://google.com/ <span class="token string">"Google"</span>)</span>than from <span class="token url">[Yahoo](http://search.yahoo.com/ <span class="token string">"Yahoo Search"</span>)</span> or<span class="token url">[MSN](http://search.msn.com/ <span class="token string">"MSN Search"</span>)</span>.</code></pre><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用星号（<em>）和底线（_）作为标记强调字词的符号，被 </em> 或 _ 包围的字词会被转成用\<em>标签包围，用两个 * 或 _ 包起来的话，则会被转成\<strong>，例如：</strong></em></p><p><em>single asterisks</em></p><p><em>single underscores</em></p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><pre><code>*single asterisks*_single underscores_**double asterisks**__double underscores__会转成：&lt;em&gt;single asterisks&lt;/em&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;strong&gt;double underscores&lt;/strong&gt;</code></pre><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：<br>un<em>frigging</em>believable</p><pre><code>un*frigging*believable</code></pre><p>但是<strong>如果你的 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。</strong></p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><pre><code>\*this text is surrounded by literal asterisks\*</code></pre><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（`），例如：</p><p>Use the <code>printf()</code> function.</p><pre><code>Use the `printf()` function.会产生：&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;</code></pre><p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p><p><code>There is a literal backtick (`) here.</code></p><pre><code>``There is a literal backtick (`) here.``这段语法会产生：&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;</code></pre><p>代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</p><p>A single backtick in a code span: <code>`</code></p><p>A backtick-delimited string in a code span: <code>`foo`</code></p><pre><code>A single backtick in a code span: `` ` ``A backtick-delimited string in a code span: `` `foo` ``会产生：&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;</code></pre><p>在代码区段内，&amp; 和方括号都会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</p><p>Please don’t use any <code>&lt;blink&gt;</code> tags.</p><pre><code>Please don&#39;t use any `&lt;blink&gt;` tags.转为：&lt;p&gt;Please don&#39;t use any &lt;code&gt;&lt;blink&gt;&lt;/code&gt; tags.&lt;/p&gt;你也可以这样写：`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.以产生：&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encodedequivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： <strong>行内式</strong>和<strong>参考式</strong>。</p><h4 id="行内式的图片语法："><a href="#行内式的图片语法：" class="headerlink" title="行内式的图片语法："></a>行内式的图片语法：</h4><p>行内式的图片语法看起来像是：</p><p><img src="/assets/wallpaper-878514.jpg" alt="Alt text"></p><p><img src="/path/to/img.jpg" alt="Alt text" title="Optional title"></p><p><img src="https://via.placeholder.com/150" alt="图片占位符"><br><img src="https://via.placeholder.com/350x150" alt="图片占位符"></p><p><img src="https://via.placeholder.com/350x65" alt="图片占位符"></p><p><img src="https://via.placeholder.com/200x100" alt="" title="图片占位符"><br><img src="https://via.placeholder.com/140x100" alt="" title="图片占位符"></p><pre><code>![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional title&quot;)![图片占位符](https://via.placeholder.com/150)![图片占位符](https://via.placeholder.com/350x150)![图片占位符](https://via.placeholder.com/350x65)![](https://via.placeholder.com/200x100 &quot;图片占位符&quot;)![](https://via.placeholder.com/140x100 &quot;图片占位符&quot;)</code></pre><h4 id="参考式的图片语法："><a href="#参考式的图片语法：" class="headerlink" title="参考式的图片语法："></a>参考式的图片语法：</h4><p>参考式的图片语法则长得像这样：</p><p><img src="http://example.com/" alt="Alt text" title="Optional Title Here"></p><pre><code>![Alt text][id]「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：[id]: url/to/image  &quot;Optional title attribute&quot;</code></pre><p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 \<img> 标签。</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <em> 标签），你可以在星号的前面加上反斜杠：<br>* literal asterisks *</em></p><p><strong>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</strong></p><pre><code>\*literal asterisks\*\   反斜线`   反引号*   星号_   底线{}  花括号[]  方括号()  括弧#   井字号+   加号-   减号.   英文句点!   惊叹号</code></pre><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：<br><a href="http://example.com" target="_blank" rel="noopener">http://example.com</a></p><pre class=" language-markdown"><code class="language-markdown">&lt;http://example.com>Markdown会转为：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://example.com/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>http://example.com/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：<a href="mailto:&#97;&#x64;&#x64;&#x72;&#x65;&#115;&#x73;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#108;&#101;&#46;&#99;&#x6f;&#109;" target="_blank" rel="noopener">&#97;&#x64;&#x64;&#x72;&#x65;&#115;&#x73;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#108;&#101;&#46;&#99;&#x6f;&#109;</a></p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address@example.com</span><span class="token punctuation">></span></span>Markdown 会转成：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mailto:address@example.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>address@example.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法简介</title>
      <link href="/markdown-yu-fa-xiang-jie/"/>
      <url>/markdown-yu-fa-xiang-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h2><p><strong>Markdown是一种轻量级的「标记语言」</strong></p><blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md”</p></blockquote><blockquote><p>它由Aaron Swartz和John Gruber共同设计，Aaron Swartz就是那位于去年（2013年1月11日）自杀，有着开挂一般人生经历的程序员。维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。</p></blockquote><p><strong>为什么要使用Markdown？</strong></p><blockquote><ol><li>它是易读、易写、易更改纯文本。</li><li>兼容HTML，可以转换为HTML格式发布。</li><li>跨平台使用。</li><li>越来越多的网站支持Markdown。</li><li>更方便清晰地组织你的电子邮件。</li><li>快速发布个人博客。</li></ol></blockquote><h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p><strong>Markdown 的目标是实现「易读易写」。</strong></p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 Setext、atx、Textile、reStructuredText、Grutatext 和 EtText，而最大灵感来源其实是纯文本电子邮件的格式。</p><h3 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h3><p><strong>Markdown 语法的目标是：成为一种适用于网络的书写语言。</strong></p><p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML 区块元素――比如\<div>、\<table>、\<pre>、\<p> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的\</p><p>标签。</p><p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p><table><br>    <tr><br>        <td>Foo</td><br>        <td>Doo</td><br>    </tr><br>    <tr><br>        <td>Foo</td><br>        <td>Coo</td><br>    </tr><br>    <tr><br>        <td>Foo</td><br>        <td>Voo</td><br>    </tr><br></table><pre class=" language-HTML"><code class="language-HTML">这是一个普通段落。<table>    <tr>        <td>Foo</td>        <td>Doo</td>    </tr>    <tr>        <td>Foo</td>        <td>Coo</td>    </tr>    <tr>        <td>Foo</td>        <td>Voo</td>    </tr></table>这是另一个普通段落。</code></pre><p><em>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<strong>强调</strong>会没有效果。</em></p><p><strong>HTML 的区段（行内）标签如\<span>、\<cite>、\<del> 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的\<a>或\<img>标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</a></del></cite></span></strong></p><p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p><h3 id="特殊字符自动转换"><a href="#特殊字符自动转换" class="headerlink" title="特殊字符自动转换"></a>特殊字符自动转换</h3><p>在 HTML 文件中，有两个字符需要特殊处理： &lt; 和 &amp; 。 &lt; 符号用于起始标签，&amp; 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 &lt; 和 &amp;。</p><p>&amp; 字符尤其让网络文档编写者受折磨，如果你要打「AT&amp;T」 ，你必须要写成「AT&amp;T」。而网址中的 &amp; 字符也要转换。比如你要链接到：</p><pre class=" language-HTML"><code class="language-HTML">http://images.google.com/images?num=30&q=larry+bird</code></pre><p>你必须要把网址转换写为：</p><pre class=" language-HTML"><code class="language-HTML">http://images.google.com/images?num=30&amp;q=larry+bird</code></pre><p>才能放到链接标签的 href 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 &amp; 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 &amp;。</p><p>所以你如果要在文档中插入一个版权符号©，你可以这样写：<code>&amp;copy;</code><br>Markdown 会保留它不动。而若你写：AT&amp;T ，Markdown 就会将它转为：<code>AT&amp;amp;T</code>。</p><p>类似的状况也会发生在 &lt; 符号上，因为 Markdown 允许 兼容 HTML ，如果你是把 &lt; 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：</p><p>4 &lt; 5  Markdown 将会把它转换为：<code>4 &amp;lt; 5</code></p><p>不过需要注意的是，code 范围内，不论是行内还是区块， &lt; 和 &amp; 两个符号都一定会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 &lt; 和 &amp; 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><h2 id="区块元素（块级元素）"><a href="#区块元素（块级元素）" class="headerlink" title="区块元素（块级元素）"></a>区块元素（块级元素）</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 \<br> 标签。</p><p>如果你确实想要依赖 Markdown 来插入\<br> 标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生\<br> ，但是简单地「每个换行都转换为\<br>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 区块引用 和多段落的 列表 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p><p>类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如：</p><h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token title important">This is an H1<span class="token punctuation">=============</span></span><span class="token title important">This is an H2<span class="token punctuation">-------------</span></span></code></pre><p><strong>任何数量的 = 和 - 都可以有效果。</strong></p><p>类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：</p><h1 id="这是-H1"><a href="#这是-H1" class="headerlink" title="这是 H1"></a>这是 H1</h1><h2 id="这是-H2"><a href="#这是-H2" class="headerlink" title="这是 H2"></a>这是 H2</h2><h3 id="这是-H3"><a href="#这是-H3" class="headerlink" title="这是 H3"></a>这是 H3</h3><h4 id="这是-H4"><a href="#这是-H4" class="headerlink" title="这是 H4"></a>这是 H4</h4><h5 id="这是-H5"><a href="#这是-H5" class="headerlink" title="这是 H5"></a>这是 H5</h5><h6 id="这是-H6"><a href="#这是-H6" class="headerlink" title="这是 H6"></a>这是 H6</h6><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 这是 H1</span><span class="token title important"><span class="token punctuation">##</span> 这是 H2</span><span class="token title important"><span class="token punctuation">###</span> 这是 H3</span><span class="token title important"><span class="token punctuation">####</span> 这是 H4</span><span class="token title important"><span class="token punctuation">#####</span> 这是 H5</span><span class="token title important"><span class="token punctuation">######</span> 这是 H6</span></code></pre><h3 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h3><p>Markdown 标记区块引用是使用类似 email 中用 &gt; 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &gt; ：</p><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<span class="token blockquote punctuation">></span> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<span class="token blockquote punctuation">></span> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<span class="token blockquote punctuation">></span> <span class="token blockquote punctuation">></span> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<span class="token blockquote punctuation">></span> id sem consectetuer libero luctus adipiscing.</code></pre><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</p><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p></blockquote><blockquote><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.<br><code>`</code>markdown<br>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p></blockquote><blockquote><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.<br><code>`</code><br>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p></blockquote><p> This is the first level of quoting.</p><blockquote><blockquote><p>This is nested blockquote.</p></blockquote><p>Back to the first level.</p></blockquote><pre class=" language-markdown"><code class="language-markdown"> This is the first level of quoting.<span class="token blockquote punctuation">></span><span class="token blockquote punctuation">> ></span> This is nested blockquote.<span class="token blockquote punctuation">></span><span class="token blockquote punctuation">></span> Back to the first level.</code></pre><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><blockquote><h2 id="这是一个标题。"><a href="#这是一个标题。" class="headerlink" title="这是一个标题。"></a>这是一个标题。</h2><ol><li>这是第一行列表项。</li><li>这是第二行列表项。</li></ol><p>给出一些例子代码：</p><pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">##</span> 这是一个标题。</span><span class="token list punctuation">1.</span>   这是第一行列表项。<span class="token list punctuation">2.</span>   这是第二行列表项。给出一些例子代码：<span class="token code keyword">    return shell_exec("echo $input | $markdown_script");</span></code></pre><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择增加引用阶层。</p></blockquote><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown 支持有序列表和无序列表。</p><p><strong>无序列表使用星号、加号或是减号作为列表标记：</strong></p><ul><li>Red</li><li>Green</li><li>Blue</li></ul><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> Red<span class="token list punctuation">*</span> Green<span class="token list punctuation">*</span> Blue等同于：<span class="token list punctuation">+</span> Red<span class="token list punctuation">+</span> Green<span class="token list punctuation">+</span> Blue也等同于：<span class="token list punctuation">-</span> Red<span class="token list punctuation">-</span> Green<span class="token list punctuation">-</span> Blue</code></pre><p>有序列表则使用数字接着一个英文句点：</p><ol><li>Bird</li><li>McHale</li><li>Parish<br><code>`</code>markdown</li><li>Bird</li><li>McHale</li><li>Parish<br><code>`</code><br>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：<ol><br><li>Bird</li><br><li>McHale</li><br><li>Parish</li><br></ol></li></ol><pre class=" language-HTML"><code class="language-HTML"><ol><li>Bird</li><li>McHale</li><li>Parish</li></ol></code></pre><p>如果你的列表标记写成：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> Bird<span class="token list punctuation">1.</span> McHale<span class="token list punctuation">1.</span> Parish或甚至是：<span class="token list punctuation">3.</span> Bird<span class="token list punctuation">1.</span> McHale<span class="token list punctuation">8.</span> Parish</code></pre><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><ul><li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<br>Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<br>viverra nec, fringilla in, laoreet vitae, risus.</li><li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<br>Suspendisse id sem consectetuer libero luctus adipiscing.</li></ul><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span>   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<span class="token code keyword">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><span class="token code keyword">    viverra nec, fringilla in, laoreet vitae, risus.</span><span class="token list punctuation">*</span>   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<span class="token code keyword">    Suspendisse id sem consectetuer libero luctus adipiscing.</span></code></pre><p>但是如果你懒，那也行：</p><ul><li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<br>Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<br>viverra nec, fringilla in, laoreet vitae, risus.</li><li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<br>Suspendisse id sem consectetuer libero luctus adipiscing.</li></ul><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span>   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.<span class="token list punctuation">*</span>   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用\</p><p> 标签包起来，举例来说：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span>   Bird<span class="token list punctuation">*</span>   Magic会被转换为：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Bird<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Magic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>但是这个：<span class="token list punctuation">*</span>   Bird<span class="token list punctuation">*</span>   Magic会被转换为：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Bird<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Magic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><ol><li><p>This is a list item with two paragraphs. Lorem ipsum dolor<br>sit amet, consectetuer adipiscing elit. Aliquam hendrerit<br>mi posuere lectus.</p><p>Vestibulum enim wisi, viverra nec, fringilla in, laoreet<br>vitae, risus. Donec sit amet nisl. Aliquam semper ipsum<br>sit amet velit.</p></li><li><p>Suspendisse id sem consectetuer libero luctus adipiscing.<br><code>`</code>markdown</p></li><li><p>This is a list item with two paragraphs. Lorem ipsum dolor<br>sit amet, consectetuer adipiscing elit. Aliquam hendrerit<br>mi posuere lectus.</p><p>Vestibulum enim wisi, viverra nec, fringilla in, laoreet<br>vitae, risus. Donec sit amet nisl. Aliquam semper ipsum<br>sit amet velit.</p></li><li><p>Suspendisse id sem consectetuer libero luctus adipiscing.<br><code>`</code><br>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p></li></ol><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span>   This is a list item with two paragraphs.<span class="token code keyword">    This is the second paragraph in the list item. You're</span>only required to indent the first line. Lorem ipsum dolorsit amet, consectetuer adipiscing elit.<span class="token list punctuation">*</span>   Another item in the same list.</code></pre><p>如果要在列表项目内放进引用，那 &gt; 就需要缩进：</p><ul><li><p>A list item with a blockquote:</p><blockquote><p>This is a blockquote<br>inside a list item.<br><code>`</code>markdown</p></blockquote></li><li><p>A list item with a blockquote:</p><blockquote><p>This is a blockquote<br>inside a list item.<br><code>如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符：</code>markdown</p></blockquote></li><li><p>一列表项包含一个列表区块：</p><pre><code>&lt;代码写在这&gt;</code></pre><p><code>`</code><br>当然，项目列表很可能会不小心产生，像是下面这样的写法</p></li></ul><ol start="1986"><li>What a great season.<br><code>`</code>markdown</li><li>What a great season.<pre><code>换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠。```markdown1986\. What a great season.</code></pre></li></ol><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用\<pre> 和\<code> 标签来把代码区块包起来。<br>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</code></pre></p><p>这是一个普通段落：</p><pre><code>这是一个代码区块。</code></pre><p>Markdown 会转换成：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个普通段落：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>这是一个代码区块。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span></code></pre><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><p>Here is an example of AppleScript:</p><pre><code>tell application &quot;Foo&quot;    beepend tell</code></pre><pre class=" language-markdown"><code class="language-markdown">Here is an example of AppleScript:<span class="token code keyword">    tell application "Foo"</span><span class="token code keyword">        beep</span><span class="token code keyword">    end tell</span></code></pre><p>会被转换为：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Here is an example of AppleScript:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>tell application "Foo"<span class="token code keyword">    beep</span>end tell<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span></code></pre><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， &amp; 、 &lt; 和 &gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><div class="footer"><br>  &copy; 2004 Foo Corporation<br></div><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token entity" title="&copy;">&amp;copy;</span> 2004 Foo Corporation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>会被转换为：</p><pre class=" language-HTML"><code class="language-HTML"><pre><code>&lt;div class="footer"&gt;    &amp;copy; 2004 Foo Corporation&lt;/div&gt;</code></pre></code></pre><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><hr><hr><hr><hr><hr><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">* * *</span><span class="token hr punctuation">***</span><span class="token hr punctuation">*****</span><span class="token hr punctuation">- - -</span><span class="token hr punctuation">---------------------------------------</span></code></pre><h2 id="区段元素-内联元素"><a href="#区段元素-内联元素" class="headerlink" title="区段元素 (内联元素)"></a>区段元素 (内联元素)</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种形式的链接语法： <strong>行内式</strong>和<strong>参考式</strong>两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><h4 id="行内式的链接"><a href="#行内式的链接" class="headerlink" title="行内式的链接:"></a>行内式的链接:</h4><p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><p>This is <a href="http://example.com/" title="Title" target="_blank" rel="noopener">an example</a> inline link.<br><a href="http://example.net/" target="_blank" rel="noopener">This link</a> has no title attribute.</p><pre class=" language-markdown"><code class="language-markdown">This is <span class="token url">[an example](http://example.com/ <span class="token string">"Title"</span>)</span> inline link.<span class="token url">[This link](http://example.net/)</span> has no title attribute.</code></pre><p>会产生：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://example.com/<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>an example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> inline link.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://example.net/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> has notitle attribute.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>如果你是要链接到同样主机的资源，你可以使用相对路径：<br>See my <a href="/about/">About</a> page for details.</p><pre class=" language-markdown"><code class="language-markdown">See my <span class="token url">[About](/about/)</span> page for details.</code></pre><h4 id="参考式的链接"><a href="#参考式的链接" class="headerlink" title="参考式的链接:"></a>参考式的链接:</h4><p>参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><p>This is <a href="http://example.com/" title="Optional Title Here" target="_blank" rel="noopener">an example</a> reference-style link.</p><pre class=" language-markdown"><code class="language-markdown">This is <span class="token url">[an example][<span class="token variable">id</span>]</span>reference-style link.你也可以选择性地在两个方括号中间加上一个空格：This is <span class="token url">[an example] [<span class="token variable">id</span>]</span> reference-style link.接着，在文件的任意处，你可以把这个标记的链接内容定义出来：<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">id</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://example.com/  <span class="token string">"Optional Title Here"</span></span></code></pre><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着.</li></ul><p>下面这三种链接的定义都是相同：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    //这个默认是不显示的</span>   <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">foo</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://example.com/  <span class="token string">"Optional Title Here"</span></span>   <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">foo</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://example.com/  <span class="token string">'Optional Title Here'</span></span>   <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">foo</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://example.com/  <span class="token string">(Optional Title Here)</span></span></code></pre><p><em>请注意：有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</em></p><p>链接网址也可以用尖括号包起来：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">id</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">&lt;</span>http://example.com<span class="token punctuation">></span> <span class="token string">"Optional Title Here"</span></span></code></pre><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">id</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://example.com/longish/path/to/resource/here</span><span class="token code keyword">    "Optional Title Here"</span></code></pre><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写，因此下面两个链接是一样的：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[link text][<span class="token variable">a</span>]</span><span class="token url">[link text][<span class="token variable">A</span>]</span></code></pre><p>隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><p><a href="http://google.com/" target="_blank" rel="noopener">google</a></p><p>然后定义链接内容：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[Google][]</span>然后定义链接内容：<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">Google</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://google.com/</span>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：Visit <span class="token url">[Daring Fireball][]</span> for more information.然后接着定义链接<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">Daring Fireball</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://daringfireball.net/</span></code></pre><p><strong>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</strong></p><p>下面是一个参考式链接的范例：</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p><pre class=" language-markdown"><code class="language-markdown">I get 10 times more traffic from <span class="token url">[Google] [<span class="token variable">1</span>]</span> than from<span class="token url">[Yahoo] [<span class="token variable">2</span>]</span> or <span class="token url">[MSN] [<span class="token variable">3</span>]</span>.  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://google.com/        <span class="token string">"Google"</span></span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://search.yahoo.com/  <span class="token string">"Yahoo Search"</span></span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://search.msn.com/    <span class="token string">"MSN Search"</span></span></code></pre><p>如果改成用链接名称的方式写：</p><p>I get 10 times more traffic from <a href="http://google.com/" target="_blank" rel="noopener">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p><pre class=" language-markdown"><code class="language-markdown">I get 10 times more traffic from <span class="token url">[Google][]</span> than from<span class="token url">[Yahoo][]</span> or <span class="token url">[MSN][]</span>.  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">google</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://google.com/        <span class="token string">"Google"</span></span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">yahoo</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  http://search.yahoo.com/  <span class="token string">"Yahoo Search"</span></span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">msn</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    http://search.msn.com/    <span class="token string">"MSN Search"</span></span></code></pre><p>上面两种写法都会产生下面的 HTML。</p><pre class=" language-HTML"><code class="language-HTML"><p>I get 10 times more traffic from <a href="http://google.com/"title="Google">Google</a> than from<a href="http://search.yahoo.com/" title="Yahoo Search">Yahoo</a>or <a href="http://search.msn.com/" title="MSN Search">MSN</a>.</p></code></pre><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a><br>than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or<br><a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p><pre class=" language-markdown"><code class="language-markdown">I get 10 times more traffic from <span class="token url">[Google](http://google.com/ <span class="token string">"Google"</span>)</span>than from <span class="token url">[Yahoo](http://search.yahoo.com/ <span class="token string">"Yahoo Search"</span>)</span> or<span class="token url">[MSN](http://search.msn.com/ <span class="token string">"MSN Search"</span>)</span>.</code></pre><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用星号（<em>）和底线（_）作为标记强调字词的符号，被 </em> 或 _ 包围的字词会被转成用\<em>标签包围，用两个 * 或 _ 包起来的话，则会被转成\<strong>，例如：</strong></em></p><p><em>single asterisks</em></p><p><em>single underscores</em></p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><pre><code>*single asterisks*_single underscores_**double asterisks**__double underscores__会转成：&lt;em&gt;single asterisks&lt;/em&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;strong&gt;double underscores&lt;/strong&gt;</code></pre><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：<br>un<em>frigging</em>believable</p><pre><code>un*frigging*believable</code></pre><p>但是<strong>如果你的 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。</strong></p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><pre><code>\*this text is surrounded by literal asterisks\*</code></pre><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（`），例如：</p><p>Use the <code>printf()</code> function.</p><pre><code>Use the `printf()` function.会产生：&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;</code></pre><p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p><p><code>There is a literal backtick (`) here.</code></p><pre><code>``There is a literal backtick (`) here.``这段语法会产生：&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;</code></pre><p>代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</p><p>A single backtick in a code span: <code>`</code></p><p>A backtick-delimited string in a code span: <code>`foo`</code></p><pre><code>A single backtick in a code span: `` ` ``A backtick-delimited string in a code span: `` `foo` ``会产生：&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;</code></pre><p>在代码区段内，&amp; 和方括号都会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</p><p>Please don’t use any <code>&lt;blink&gt;</code> tags.</p><pre><code>Please don&#39;t use any `&lt;blink&gt;` tags.转为：&lt;p&gt;Please don&#39;t use any &lt;code&gt;&lt;blink&gt;&lt;/code&gt; tags.&lt;/p&gt;你也可以这样写：`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.以产生：&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encodedequivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p><p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： <strong>行内式</strong>和<strong>参考式</strong>。</p><h4 id="行内式的图片语法："><a href="#行内式的图片语法：" class="headerlink" title="行内式的图片语法："></a>行内式的图片语法：</h4><p>行内式的图片语法看起来像是：</p><p><img src="/assets/wallpaper-878514.jpg" alt="Alt text"></p><p><img src="/path/to/img.jpg" alt="Alt text" title="Optional title"></p><p><img src="https://via.placeholder.com/150" alt="图片占位符"><br><img src="https://via.placeholder.com/350x150" alt="图片占位符"></p><p><img src="https://via.placeholder.com/350x65" alt="图片占位符"></p><p><img src="https://via.placeholder.com/200x100" alt="" title="图片占位符"><br><img src="https://via.placeholder.com/140x100" alt="" title="图片占位符"></p><pre><code>![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional title&quot;)![图片占位符](https://via.placeholder.com/150)![图片占位符](https://via.placeholder.com/350x150)![图片占位符](https://via.placeholder.com/350x65)![](https://via.placeholder.com/200x100 &quot;图片占位符&quot;)![](https://via.placeholder.com/140x100 &quot;图片占位符&quot;)</code></pre><p>详细叙述如下：</p><ul><li>一个惊叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。</li></ul><h4 id="参考式的图片语法："><a href="#参考式的图片语法：" class="headerlink" title="参考式的图片语法："></a>参考式的图片语法：</h4><p>参考式的图片语法则长得像这样：</p><p><img src="http://example.com/" alt="Alt text" title="Optional Title Here"></p><pre><code>![Alt text][id]「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：[id]: url/to/image  &quot;Optional title attribute&quot;</code></pre><p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 \<img> 标签。</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <em> 标签），你可以在星号的前面加上反斜杠：<br>* literal asterisks *</em></p><p><strong>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</strong></p><pre><code>\*literal asterisks\*\   反斜线`   反引号*   星号_   底线{}  花括号[]  方括号()  括弧#   井字号+   加号-   减号.   英文句点!   惊叹号</code></pre><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：<br><a href="http://example.com" target="_blank" rel="noopener">http://example.com</a></p><pre class=" language-markdown"><code class="language-markdown">&lt;http://example.com>Markdown会转为：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://example.com/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>http://example.com/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：<a href="mailto:&#x61;&#100;&#100;&#x72;&#x65;&#115;&#x73;&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#108;&#x65;&#46;&#x63;&#111;&#x6d;" target="_blank" rel="noopener">&#x61;&#100;&#100;&#x72;&#x65;&#115;&#x73;&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#108;&#x65;&#46;&#x63;&#111;&#x6d;</a></p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address@example.com</span><span class="token punctuation">></span></span>Markdown 会转成：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mailto:address@example.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>address@example.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre></pre></table></div></p>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 博客框架 链接</title>
      <link href="/hexo-bo-ke-kuang-jia-lian-jie/"/>
      <url>/hexo-bo-ke-kuang-jia-lian-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="hexo-一个快速、简洁且高效的博客框架"><a href="#hexo-一个快速、简洁且高效的博客框架" class="headerlink" title="hexo 一个快速、简洁且高效的博客框架"></a><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo 一个快速、简洁且高效的博客框架</a></h3><h4 id="超快速度："><a href="#超快速度：" class="headerlink" title="超快速度："></a>超快速度：</h4><blockquote><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js</a>所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</p></blockquote><h4 id="支持-Markdown："><a href="#支持-Markdown：" class="headerlink" title="支持 Markdown："></a>支持 Markdown：</h4><blockquote><br><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo </a> 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。<br></blockquote><h5>一键部署：</h5><blockquote><br>只需一条指令即可部署到 <a href="https://github.com/" target="_blank" rel="noopener">GitHub Pages</a>, <a href="https://www.heroku.com/" target="_blank" rel="noopener">Heroku</a> 或其他平台。<br></blockquote><h5>插件和可扩展性：</h5><blockquote><br>强大的 API 带来无限的可能，与数种模板引擎（<a href="https://ejs.bootcss.com/" target="_blank" rel="noopener">EJS</a>，<a href="https://pugjs.bootcss.com/api/getting-started.html" target="_blank" rel="noopener">Pug</a>，<a href="https://nunjucks.bootcss.com/" target="_blank" rel="noopener">Nunjucks</a>）和工具（<a href="https://www.babeljs.cn/" target="_blank" rel="noopener">Babel</a>，<a href="https://www.postcss.com.cn/" target="_blank" rel="noopener">PostCSS</a>，<a href="http://lesscss.cn/" target="_blank" rel="noopener">Less</a>/<a href="https://www.sass.hk/" target="_blank" rel="noopener">Sass</a>）轻易集成<br></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CAD应用技巧之左手键</title>
      <link href="/cad-ying-yong-ji-qiao-zhi-zuo-shou-jian/"/>
      <url>/cad-ying-yong-ji-qiao-zhi-zuo-shou-jian/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> CAD </tag>
            
            <tag> 应用技巧 </tag>
            
            <tag> 打印设置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CAD应用技巧之打印设置”</title>
      <link href="/cad-ying-yong-ji-qiao-zhi-da-yin-she-zhi/"/>
      <url>/cad-ying-yong-ji-qiao-zhi-da-yin-she-zhi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> CAD </tag>
            
            <tag> 应用技巧 </tag>
            
            <tag> 打印设置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hell hexo</title>
      <link href="/hello-hexo/"/>
      <url>/hello-hexo/</url>
      
        <content type="html"><![CDATA[<p><strong>hexo.sh 一个方便管理与发布hexo博客的脚本。</strong></p><fancybox><img src="https://img.vim-cn.com/e8/e14f6ecb16deb21e894e78c9ccc46729854394.png" alt=""><fancybox><br><br><strong>material-x 一个简约的卡片式Hexo博客主题。</strong><br><br><fancybox><br><img src="https://img.vim-cn.com/52/a54815c02ce232f11f54b2c547c1337828833c.png" alt=""><br></fancybox><p><a href="https://img.vim-cn.com" target="_blank" rel="noopener">img.vim-cn.com</a>是一个十分干净好用的图床，本站以及博客中的所有图片都是使用的这个图床。</p><p>所以，这是一个快速批量<strong>上传图片</strong>的脚本。</p><p><fancybox><img src="https://img.vim-cn.com/0d/e463788b9eb82f82b551d8da1cd4cbae9d64cb.png" alt=""><fancybox></fancybox></fancybox></p><p>This is a image test post.</p><p><img src="/assets/wallpaper-2572384.jpg" alt=""></p><p><img src="/assets/wallpaper-2311325.jpg" alt="Caption"></p><p><img src="/assets/wallpaper-878514.jpg" alt=""></p><p><img src="http://placehold.it/350x150.jpg" alt="Small Picture"></p></fancybox></fancybox>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
